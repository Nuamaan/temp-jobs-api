openapi: 3.0.0

info:
  title: Jobs API

  contact: {}

  version: "1.0"

servers:
  - url: https://temp-jobs-api-8i54.onrender.com/api/v1

    variables: {}

paths:
  /auth/register:
    post:
      tags:
        - Auth

      summary: Register User

      operationId: RegisterUser

      parameters: []

      requestBody:
        description: ""

        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RegisterUserRequest"

                - example:
                    name: Amaan

                    email: amaan@gmail.com

                    password: secret

            example:
              name: Amaan

              email: amaan@gmail.com

              password: secret

        required: true

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security: []

  /auth/login:
    post:
      tags:
        - Auth

      summary: Login

      operationId: Login

      parameters: []

      requestBody:
        description: ""

        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/LoginRequest"

                - example:
                    email: nuam@gmail.com

                    password: secret

            example:
              email: nuam@gmail.com

              password: secret

        required: true

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security: []

  /jobs:
    post:
      tags:
        - Jobs

      summary: Create Job

      operationId: CreateJob

      parameters: []

      requestBody:
        description: ""

        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreateJobRequest"

                - example:
                    company: Novo Cans

                    position: Developer

            example:
              company: Novo Cans

              position: Developer

        required: true

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

    get:
      tags:
        - Jobs

      summary: Get all jobs

      operationId: Getalljobs

      parameters: []

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID

    get:
      tags:
        - Jobs

      summary: Get Single Job

      operationId: GetSingleJob

      parameters: []

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

    patch:
      tags:
        - Jobs

      summary: Update Job

      operationId: UpdateJob

      parameters: []

      requestBody:
        description: ""

        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateJobRequest"

                - example:
                    company: Random

                    position: " none Developer"

            example:
              company: Random

              position: " none Developer"

        required: true

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

    delete:
      tags:
        - Jobs

      summary: Delete Job

      operationId: DeleteJob

      parameters: []

      responses:
        "200":
          description: ""

          headers: {}

      deprecated: false

      security:
        - bearer: []

components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest

      required:
        - name

        - email

        - password

      type: object

      properties:
        name:
          type: string

        email:
          type: string

        password:
          type: string

      example:
        name: Amaan

        email: amaan@gmail.com

        password: secret

    LoginRequest:
      title: LoginRequest

      required:
        - email

        - password

      type: object

      properties:
        email:
          type: string

        password:
          type: string

      example:
        email: nuam@gmail.com

        password: secret

    CreateJobRequest:
      title: CreateJobRequest

      required:
        - company

        - position

      type: object

      properties:
        company:
          type: string

        position:
          type: string

      example:
        company: Novo Cans

        position: Developer

    UpdateJobRequest:
      title: UpdateJobRequest

      required:
        - company

        - position

      type: object

      properties:
        company:
          type: string

        position:
          type: string

      example:
        company: Random

        position: " none Developer"

  securitySchemes:
    bearer:
      type: http

      scheme: bearer

security: []

tags:
  - name: Auth

    description: ""

  - name: Jobs

    description: ""
